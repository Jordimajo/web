{"ast":null,"code":"export const actualizarPrecioDelProducto = (fecha, indiceProducto, precio) => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n\n  // Si la fecha no existe en almacenados, inicializarla\n  if (!almacenados[fecha]) {\n    almacenados[fecha] = [0, 0, 0, 0, 0];\n  }\n\n  // Actualizar el precio del producto en la fecha dada\n  almacenados[fecha][indiceProducto] = precio;\n  localStorage.setItem(\"datosJuego\", JSON.stringify(almacenados));\n};\nexport const obtenerDatosDelDia = fecha => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n  return almacenados[fecha] || null;\n};\nexport const obtenerTodosLosDatos = () => {\n  return JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n};\nexport const haJugadoElDia = fecha => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n  const datosDelDia = almacenados[fecha] || [0, 0, 0, 0, 0];\n\n  // Encuentra el índice del primer producto que aún no ha sido jugado (tiene un precio de 0).\n  const indiceSiguienteProducto = datosDelDia.indexOf(0);\n\n  // Si todos los productos han sido jugados, devuelve -1. Si no, devuelve el índice del siguiente producto.\n  return indiceSiguienteProducto === -1 ? -1 : indiceSiguienteProducto;\n};\nexport const resumenDiasJugados = () => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n  const resumen = {};\n  for (const fecha in almacenados) {\n    resumen[fecha] = almacenados[fecha].some(precio => precio !== 0);\n  }\n  return resumen;\n};","map":{"version":3,"names":["actualizarPrecioDelProducto","fecha","indiceProducto","precio","almacenados","JSON","parse","localStorage","getItem","setItem","stringify","obtenerDatosDelDia","obtenerTodosLosDatos","haJugadoElDia","datosDelDia","indiceSiguienteProducto","indexOf","resumenDiasJugados","resumen","some"],"sources":["/Users/jordi/web/web/aplicacion/src/utils/storage.js"],"sourcesContent":["export const actualizarPrecioDelProducto = (fecha, indiceProducto, precio) => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n\n    // Si la fecha no existe en almacenados, inicializarla\n    if (!almacenados[fecha]) {\n        almacenados[fecha] = [0, 0, 0, 0, 0];\n    }\n\n    // Actualizar el precio del producto en la fecha dada\n    almacenados[fecha][indiceProducto] = precio;\n\n    localStorage.setItem(\"datosJuego\", JSON.stringify(almacenados));\n};\n\nexport const obtenerDatosDelDia = (fecha) => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n    return almacenados[fecha] || null;\n};\n\nexport const obtenerTodosLosDatos = () => {\n    return JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n};\n\nexport const haJugadoElDia = (fecha) => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n    const datosDelDia = almacenados[fecha] || [0, 0, 0, 0, 0];\n\n    // Encuentra el índice del primer producto que aún no ha sido jugado (tiene un precio de 0).\n    const indiceSiguienteProducto = datosDelDia.indexOf(0);\n\n    // Si todos los productos han sido jugados, devuelve -1. Si no, devuelve el índice del siguiente producto.\n    return indiceSiguienteProducto === -1 ? -1 : indiceSiguienteProducto;\n};\n\n\nexport const resumenDiasJugados = () => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n    const resumen = {};\n\n    for (const fecha in almacenados) {\n        resumen[fecha] = almacenados[fecha].some(precio => precio !== 0);\n    }\n\n    return resumen;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,2BAA2B,GAAGA,CAACC,KAAK,EAAEC,cAAc,EAAEC,MAAM,KAAK;EAC1E,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;;EAE1E;EACA,IAAI,CAACJ,WAAW,CAACH,KAAK,CAAC,EAAE;IACrBG,WAAW,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxC;;EAEA;EACAG,WAAW,CAACH,KAAK,CAAC,CAACC,cAAc,CAAC,GAAGC,MAAM;EAE3CI,YAAY,CAACE,OAAO,CAAC,YAAY,EAAEJ,IAAI,CAACK,SAAS,CAACN,WAAW,CAAC,CAAC;AACnE,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAIV,KAAK,IAAK;EACzC,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;EAC1E,OAAOJ,WAAW,CAACH,KAAK,CAAC,IAAI,IAAI;AACrC,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;EACtC,OAAOP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;AACjE,CAAC;AAED,OAAO,MAAMK,aAAa,GAAIZ,KAAK,IAAK;EACpC,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;EAC1E,MAAMM,WAAW,GAAGV,WAAW,CAACH,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAEzD;EACA,MAAMc,uBAAuB,GAAGD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC;;EAEtD;EACA,OAAOD,uBAAuB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGA,uBAAuB;AACxE,CAAC;AAGD,OAAO,MAAME,kBAAkB,GAAGA,CAAA,KAAM;EACpC,MAAMb,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;EAC1E,MAAMU,OAAO,GAAG,CAAC,CAAC;EAElB,KAAK,MAAMjB,KAAK,IAAIG,WAAW,EAAE;IAC7Bc,OAAO,CAACjB,KAAK,CAAC,GAAGG,WAAW,CAACH,KAAK,CAAC,CAACkB,IAAI,CAAChB,MAAM,IAAIA,MAAM,KAAK,CAAC,CAAC;EACpE;EAEA,OAAOe,OAAO;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
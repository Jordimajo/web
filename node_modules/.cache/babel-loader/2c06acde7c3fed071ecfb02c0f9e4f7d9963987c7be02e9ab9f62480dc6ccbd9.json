{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.js\";\nimport React from 'react';\nimport { format, addMonths, isBefore, isToday } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarioPage = () => {\n  const today = new Date();\n  const startDate = new Date(2023, 8, 13); // 13 de septiembre de 2023\n\n  const generateMonths = () => {\n    let months = [];\n    for (let i = 0; i < 6; i++) {\n      const monthDate = addMonths(startDate, i);\n      if (isBefore(monthDate, today)) {\n        months.push(monthDate);\n      }\n    }\n    return months;\n  };\n  const renderDays = monthDate => {\n    const days = [];\n    const month = monthDate.getMonth();\n    for (let i = 1; i <= 31; i++) {\n      const dayDate = new Date(monthDate.getFullYear(), month, i);\n      if (dayDate.getMonth() === month) {\n        days.push(dayDate);\n      }\n    }\n    return days.map(day => {\n      let color = \"gray\";\n      let link = null;\n      const isPlayed = false;\n      const isInProgress = isToday(day);\n      if (isBefore(day, startDate)) {\n        color = \"gray\";\n      } else if (isPlayed) {\n        color = \"red\";\n        link = `/resumen/${format(day, 'yyyy-MM-dd')}`;\n      } else if (isInProgress) {\n        color = \"yellow\";\n      } else {\n        color = \"green\";\n        link = `/jugar/${format(day, 'yyyy-MM-dd')}`;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: color\n        },\n        children: link ? /*#__PURE__*/_jsxDEV(Link, {\n          to: link,\n          children: format(day, 'dd')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this) : format(day, 'dd')\n      }, format(day, 'yyyy-MM-dd'), false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: generateMonths().map(monthDate => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: format(monthDate, 'MMMM yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), renderDays(monthDate)]\n    }, format(monthDate, 'yyyy-MM'), true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarioPage;\nexport default CalendarioPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarioPage\");","map":{"version":3,"names":["React","format","addMonths","isBefore","isToday","Link","jsxDEV","_jsxDEV","CalendarioPage","today","Date","startDate","generateMonths","months","i","monthDate","push","renderDays","days","month","getMonth","dayDate","getFullYear","map","day","color","link","isPlayed","isInProgress","style","backgroundColor","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.js"],"sourcesContent":["import React from 'react';\nimport { format, addMonths, isBefore, isToday } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nconst CalendarioPage = () => {\n  const today = new Date();\n  const startDate = new Date(2023, 8, 13); // 13 de septiembre de 2023\n\n  const generateMonths = () => {\n    let months = [];\n    for (let i = 0; i < 6; i++) {\n      const monthDate = addMonths(startDate, i);\n      if (isBefore(monthDate, today)) {\n        months.push(monthDate);\n      }\n    }\n    return months;\n  };\n\n  const renderDays = (monthDate) => {\n    const days = [];\n    const month = monthDate.getMonth();\n\n    for (let i = 1; i <= 31; i++) {\n      const dayDate = new Date(monthDate.getFullYear(), month, i);\n      if (dayDate.getMonth() === month) {\n        days.push(dayDate);\n      }\n    }\n\n    return days.map(day => {\n      let color = \"gray\";\n      let link = null;\n      const isPlayed = false;\n      const isInProgress = isToday(day);\n\n      if (isBefore(day, startDate)) {\n        color = \"gray\";\n      } else if (isPlayed) {\n        color = \"red\";\n        link = `/resumen/${format(day, 'yyyy-MM-dd')}`;\n      } else if (isInProgress) {\n        color = \"yellow\";\n      } else {\n        color = \"green\";\n        link = `/jugar/${format(day, 'yyyy-MM-dd')}`;\n      }\n\n      return (\n        <div key={format(day, 'yyyy-MM-dd')} style={{ backgroundColor: color }}>\n          {link ? <Link to={link}>{format(day, 'dd')}</Link> : format(day, 'dd')}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div>\n      {generateMonths().map(monthDate => (\n        <div key={format(monthDate, 'yyyy-MM')}>\n          <h2>{format(monthDate, 'MMMM yyyy')}</h2>\n          {renderDays(monthDate)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CalendarioPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,UAAU;AAC/D,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAG,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEzC,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,SAAS,GAAGb,SAAS,CAACS,SAAS,EAAEG,CAAC,CAAC;MACzC,IAAIX,QAAQ,CAACY,SAAS,EAAEN,KAAK,CAAC,EAAE;QAC9BI,MAAM,CAACG,IAAI,CAACD,SAAS,CAAC;MACxB;IACF;IACA,OAAOF,MAAM;EACf,CAAC;EAED,MAAMI,UAAU,GAAIF,SAAS,IAAK;IAChC,MAAMG,IAAI,GAAG,EAAE;IACf,MAAMC,KAAK,GAAGJ,SAAS,CAACK,QAAQ,CAAC,CAAC;IAElC,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMO,OAAO,GAAG,IAAIX,IAAI,CAACK,SAAS,CAACO,WAAW,CAAC,CAAC,EAAEH,KAAK,EAAEL,CAAC,CAAC;MAC3D,IAAIO,OAAO,CAACD,QAAQ,CAAC,CAAC,KAAKD,KAAK,EAAE;QAChCD,IAAI,CAACF,IAAI,CAACK,OAAO,CAAC;MACpB;IACF;IAEA,OAAOH,IAAI,CAACK,GAAG,CAACC,GAAG,IAAI;MACrB,IAAIC,KAAK,GAAG,MAAM;MAClB,IAAIC,IAAI,GAAG,IAAI;MACf,MAAMC,QAAQ,GAAG,KAAK;MACtB,MAAMC,YAAY,GAAGxB,OAAO,CAACoB,GAAG,CAAC;MAEjC,IAAIrB,QAAQ,CAACqB,GAAG,EAAEb,SAAS,CAAC,EAAE;QAC5Bc,KAAK,GAAG,MAAM;MAChB,CAAC,MAAM,IAAIE,QAAQ,EAAE;QACnBF,KAAK,GAAG,KAAK;QACbC,IAAI,GAAI,YAAWzB,MAAM,CAACuB,GAAG,EAAE,YAAY,CAAE,EAAC;MAChD,CAAC,MAAM,IAAII,YAAY,EAAE;QACvBH,KAAK,GAAG,QAAQ;MAClB,CAAC,MAAM;QACLA,KAAK,GAAG,OAAO;QACfC,IAAI,GAAI,UAASzB,MAAM,CAACuB,GAAG,EAAE,YAAY,CAAE,EAAC;MAC9C;MAEA,oBACEjB,OAAA;QAAqCsB,KAAK,EAAE;UAAEC,eAAe,EAAEL;QAAM,CAAE;QAAAM,QAAA,EACpEL,IAAI,gBAAGnB,OAAA,CAACF,IAAI;UAAC2B,EAAE,EAAEN,IAAK;UAAAK,QAAA,EAAE9B,MAAM,CAACuB,GAAG,EAAE,IAAI;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,GAAGnC,MAAM,CAACuB,GAAG,EAAE,IAAI;MAAC,GAD9DvB,MAAM,CAACuB,GAAG,EAAE,YAAY,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9B,CAAC;IAEV,CAAC,CAAC;EACJ,CAAC;EAED,oBACE7B,OAAA;IAAAwB,QAAA,EACGnB,cAAc,CAAC,CAAC,CAACW,GAAG,CAACR,SAAS,iBAC7BR,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAK9B,MAAM,CAACc,SAAS,EAAE,WAAW;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACxCnB,UAAU,CAACF,SAAS,CAAC;IAAA,GAFdd,MAAM,CAACc,SAAS,EAAE,SAAS,CAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA9DI7B,cAAc;AAgEpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
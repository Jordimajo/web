{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/components/BotonComprobar.js\";\nimport React from 'react';\nimport { actualizarPrecioDelProducto } from './utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotonComprobar = ({\n  fecha,\n  indiceProducto,\n  precioEstimado,\n  productoActual,\n  navegarAResumen\n}) => {\n  const calcularPuntos = (precioReal, precioUsuario) => {\n    // Aquí añades la lógica de cálculo de puntos.\n    // Por ejemplo:\n    const diferencia = Math.abs(precioReal - precioUsuario);\n    const porcentajeDiferencia = diferencia / precioReal * 100;\n\n    // Si la diferencia es menor al 10%, otorga 100 puntos, sino otorga 0\n    // (esto es solo un ejemplo, puedes ajustarlo según tus necesidades)\n    return porcentajeDiferencia <= 10 ? 100 : 0;\n  };\n  const handleComprobar = () => {\n    if (!productoActual) return;\n\n    // 1. Guardar en local storage\n    actualizarPrecioDelProducto(fecha, indiceProducto, precioEstimado);\n\n    // 2. Calcular puntos\n    const puntos = calcularPuntos(productoActual.precio, precioEstimado);\n\n    // 3. Navegar a pantalla de resumen\n    navegarAResumen(productoActual, precioEstimado, puntos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleComprobar,\n    children: \"Comprobar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = BotonComprobar;\nexport default BotonComprobar;\nvar _c;\n$RefreshReg$(_c, \"BotonComprobar\");","map":{"version":3,"names":["React","actualizarPrecioDelProducto","jsxDEV","_jsxDEV","BotonComprobar","fecha","indiceProducto","precioEstimado","productoActual","navegarAResumen","calcularPuntos","precioReal","precioUsuario","diferencia","Math","abs","porcentajeDiferencia","handleComprobar","puntos","precio","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/components/BotonComprobar.js"],"sourcesContent":["import React from 'react';\nimport { actualizarPrecioDelProducto } from './utils/storage';\n\nconst BotonComprobar = ({ fecha, indiceProducto, precioEstimado, productoActual, navegarAResumen }) => {\n  \n  const calcularPuntos = (precioReal, precioUsuario) => {\n    // Aquí añades la lógica de cálculo de puntos.\n    // Por ejemplo:\n    const diferencia = Math.abs(precioReal - precioUsuario);\n    const porcentajeDiferencia = (diferencia / precioReal) * 100;\n\n    // Si la diferencia es menor al 10%, otorga 100 puntos, sino otorga 0\n    // (esto es solo un ejemplo, puedes ajustarlo según tus necesidades)\n    return porcentajeDiferencia <= 10 ? 100 : 0;\n  }\n\n  const handleComprobar = () => {\n    if (!productoActual) return;\n\n    // 1. Guardar en local storage\n    actualizarPrecioDelProducto(fecha, indiceProducto, precioEstimado);\n\n    // 2. Calcular puntos\n    const puntos = calcularPuntos(productoActual.precio, precioEstimado);\n\n    // 3. Navegar a pantalla de resumen\n    navegarAResumen(productoActual, precioEstimado, puntos);\n  }\n\n  return (\n    <button onClick={handleComprobar}>Comprobar</button>\n  );\n}\n\nexport default BotonComprobar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,2BAA2B,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,cAAc,GAAGA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EAErG,MAAMC,cAAc,GAAGA,CAACC,UAAU,EAAEC,aAAa,KAAK;IACpD;IACA;IACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACJ,UAAU,GAAGC,aAAa,CAAC;IACvD,MAAMI,oBAAoB,GAAIH,UAAU,GAAGF,UAAU,GAAI,GAAG;;IAE5D;IACA;IACA,OAAOK,oBAAoB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC;EAC7C,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACT,cAAc,EAAE;;IAErB;IACAP,2BAA2B,CAACI,KAAK,EAAEC,cAAc,EAAEC,cAAc,CAAC;;IAElE;IACA,MAAMW,MAAM,GAAGR,cAAc,CAACF,cAAc,CAACW,MAAM,EAAEZ,cAAc,CAAC;;IAEpE;IACAE,eAAe,CAACD,cAAc,EAAED,cAAc,EAAEW,MAAM,CAAC;EACzD,CAAC;EAED,oBACEf,OAAA;IAAQiB,OAAO,EAAEH,eAAgB;IAAAI,QAAA,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAExD,CAAC;AAAAC,EAAA,GA7BKtB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { Link } from 'react-router-dom';\nimport { format, isBefore, isToday } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarioPage = () => {\n  _s();\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const renderDay = (date, selectedDate, dayInCurrentMonth) => {\n    const startDate = new Date(2023, 8, 13);\n    let backgroundColor = \"gray\";\n    let color = \"white\";\n    let link = null;\n    if (isBefore(date, startDate)) {\n      backgroundColor = \"gray\";\n      color = \"white\";\n    } else if (isToday(date)) {\n      backgroundColor = \"yellow\";\n      color = \"black\";\n      link = `/resumen/${format(date, 'yyyy-MM-dd')}`;\n    } else {\n      backgroundColor = \"green\";\n      link = `/jugar/${format(date, 'yyyy-MM-dd')}`;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor,\n        color,\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: link ? /*#__PURE__*/_jsxDEV(Link, {\n        to: link,\n        style: {\n          color\n        },\n        children: format(date, 'dd')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : format(date, 'dd')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      value: selectedDate,\n      onChange: handleDateChange,\n      renderDay: renderDay,\n      openTo: \"month\",\n      views: [\"year\", \"month\", \"day\"],\n      TextFieldComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n        ...props,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarioPage, \"biind0H+q2XROXlrmcLTzoTPho8=\");\n_c = CalendarioPage;\nexport default CalendarioPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarioPage\");","map":{"version":3,"names":["React","useState","TextField","AdapterDateFns","LocalizationProvider","DatePicker","Link","format","isBefore","isToday","jsxDEV","_jsxDEV","CalendarioPage","_s","selectedDate","handleDateChange","Date","renderDay","date","dayInCurrentMonth","startDate","backgroundColor","color","link","style","width","height","display","justifyContent","alignItems","children","to","fileName","_jsxFileName","lineNumber","columnNumber","dateAdapter","value","onChange","openTo","views","TextFieldComponent","props","variant","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { Link } from 'react-router-dom';\nimport { format, isBefore, isToday } from 'date-fns';\n\nconst CalendarioPage = () => {\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n    const renderDay = (date, selectedDate, dayInCurrentMonth) => {\n        const startDate = new Date(2023, 8, 13);\n        let backgroundColor = \"gray\";\n        let color = \"white\";\n        let link = null;\n\n        if (isBefore(date, startDate)) {\n            backgroundColor = \"gray\";\n            color = \"white\";\n        } else if (isToday(date)) {\n            backgroundColor = \"yellow\";\n            color = \"black\";\n            link = `/resumen/${format(date, 'yyyy-MM-dd')}`;\n        } else {\n            backgroundColor = \"green\";\n            link = `/jugar/${format(date, 'yyyy-MM-dd')}`;\n        }\n\n        return (\n            <div style={{ backgroundColor, color, width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                {link ? <Link to={link} style={{ color }}>{format(date, 'dd')}</Link> : format(date, 'dd')}\n            </div>\n        );\n    };\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n                value={selectedDate}\n                onChange={handleDateChange}\n                renderDay={renderDay}\n                openTo=\"month\"\n                views={[\"year\", \"month\", \"day\"]}\n                TextFieldComponent={(props) => <TextField {...props} variant=\"outlined\" />}\n            />\n        </LocalizationProvider>\n    );\n};\n\nexport default CalendarioPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
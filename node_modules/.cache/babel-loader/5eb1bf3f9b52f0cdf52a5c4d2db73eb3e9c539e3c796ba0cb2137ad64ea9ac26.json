{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { isToday, format, addDays, isBefore } from 'date-fns';\nimport { resumenDiasJugados } from '../utils/storage';\nimport './CalendarioPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendario() {\n  _s();\n  const [days, setDays] = useState([]);\n  const diasJugados = resumenDiasJugados();\n  useEffect(() => {\n    const startDay = new Date(2023, 8, 13);\n    const today = new Date();\n    const calendarDays = [];\n    for (let day = startDay; isBefore(day, today) || isToday(day); day = addDays(day, 1)) {\n      calendarDays.push(day);\n    }\n    setDays(calendarDays);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: days.map((day, index) => {\n      const formattedDate = format(day, 'yyyy-MM-dd');\n      const jugado = diasJugados[formattedDate];\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [(index === 0 || day.getDate() === 1) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-name\",\n            children: format(day, 'MMMM yyyy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"day-button\",\n            style: {\n              backgroundColor: jugado ? 'red' : 'green'\n            },\n            children: format(day, 'dd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this), day.getDate() !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"day-button\",\n          style: {\n            backgroundColor: jugado ? 'red' : 'green'\n          },\n          children: format(day, 'dd')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendario, \"mPcOYHTyVZ2XQV1Az4OdG7zolXo=\");\n_c = Calendario;\nexport default Calendario;\nvar _c;\n$RefreshReg$(_c, \"Calendario\");","map":{"version":3,"names":["React","useState","useEffect","isToday","format","addDays","isBefore","resumenDiasJugados","jsxDEV","_jsxDEV","Calendario","_s","days","setDays","diasJugados","startDay","Date","today","calendarDays","day","push","className","children","map","index","formattedDate","jugado","Fragment","getDate","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isToday, format, addDays, isBefore } from 'date-fns';\nimport { resumenDiasJugados } from '../utils/storage';\nimport './CalendarioPage.css';\n\nfunction Calendario() {\n    const [days, setDays] = useState([]);\n    const diasJugados = resumenDiasJugados();\n\n    useEffect(() => {\n        const startDay = new Date(2023, 8, 13);\n        const today = new Date();\n\n        const calendarDays = [];\n\n        for (let day = startDay; isBefore(day, today) || isToday(day); day = addDays(day, 1)) {\n            calendarDays.push(day);\n        }\n\n        setDays(calendarDays);\n    }, []);\n\n    return (\n        <div className=\"calendar\">\n            {days.map((day, index) => {\n                const formattedDate = format(day, 'yyyy-MM-dd');\n                const jugado = diasJugados[formattedDate];\n                \n                return (\n                    <React.Fragment key={index}>\n                        {/* Muestra el nombre del mes si es el primer día del mes o si es el primer día de la lista */}\n                        {(index === 0 || day.getDate() === 1) && (\n                            <div className=\"month\">\n                                <div className=\"month-name\">{format(day, 'MMMM yyyy')}</div>\n                                <button className=\"day-button\" style={{ backgroundColor: jugado ? 'red' : 'green' }}>\n                                    {format(day, 'dd')}\n                                </button>\n                            </div>\n                        )}\n                        {/* Si no es el primer día del mes, solo muestra el botón */}\n                        {(day.getDate() !== 1) && (\n                            <button className=\"day-button\" style={{ backgroundColor: jugado ? 'red' : 'green' }}>\n                                {format(day, 'dd')}\n                            </button>\n                        )}\n                    </React.Fragment>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Calendario;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
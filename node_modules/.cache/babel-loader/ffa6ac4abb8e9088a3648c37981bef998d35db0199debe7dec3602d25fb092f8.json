{"ast":null,"code":"// 1. Modificación de obtenerNombreArchivo\nconst obtenerNombreArchivo = (fecha = new Date()) => {\n  const mes = fecha.getMonth();\n  const year = fecha.getFullYear();\n  const nombresMeses = [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"];\n  return `productos_${year}_${nombresMeses[mes]}.json`;\n};\n\n// 2. Función para obtener productos de un día específico basado en clave\nconst obtenerProductosDelDia = (data, fecha = new Date()) => {\n  const dia = fecha.getDate();\n  const clave = `dia_${dia}`;\n  return data[clave] || []; // Busca los productos por la clave. Si no los encuentra, devuelve un array vacío.\n};\n\n// 3. Modificación de cargarProductosDelMes\nconst cargarProductosDelDia = async (fecha = new Date()) => {\n  const nombreArchivo = obtenerNombreArchivo(fecha);\n  try {\n    const data = await import(`./data'${nombreArchivo}`);\n    return obtenerProductosDelDia(data.default, fecha);\n  } catch (error) {\n    console.error(\"Error al cargar los productos:\", error);\n    return [];\n  }\n};\nexport { cargarProductosDelDia };","map":{"version":3,"names":["obtenerNombreArchivo","fecha","Date","mes","getMonth","year","getFullYear","nombresMeses","obtenerProductosDelDia","data","dia","getDate","clave","cargarProductosDelDia","nombreArchivo","default","error","console"],"sources":["/Users/jordi/web/web/aplicacion/src/utils/carga.js"],"sourcesContent":["// 1. Modificación de obtenerNombreArchivo\nconst obtenerNombreArchivo = (fecha = new Date()) => {\n    const mes = fecha.getMonth();\n    const year = fecha.getFullYear();\n    \n    const nombresMeses = [\n      \"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \n      \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"\n    ];\n  \n    return `productos_${year}_${nombresMeses[mes]}.json`;\n  };\n  \n  // 2. Función para obtener productos de un día específico basado en clave\n  const obtenerProductosDelDia = (data, fecha = new Date()) => {\n    const dia = fecha.getDate(); \n    const clave = `dia_${dia}`;\n    \n    return data[clave] || []; // Busca los productos por la clave. Si no los encuentra, devuelve un array vacío.\n  };\n  \n  // 3. Modificación de cargarProductosDelMes\n  const cargarProductosDelDia = async (fecha = new Date()) => {\n    const nombreArchivo = obtenerNombreArchivo(fecha);\n  \n    try {\n      const data = await import(`./data'${nombreArchivo}`);\n      return obtenerProductosDelDia(data.default, fecha);\n    } catch (error) {\n      console.error(\"Error al cargar los productos:\", error);\n      return [];\n    }\n  };\n  \n  export { cargarProductosDelDia };\n  "],"mappings":"AAAA;AACA,MAAMA,oBAAoB,GAAGA,CAACC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,KAAK;EACjD,MAAMC,GAAG,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC;EAC5B,MAAMC,IAAI,GAAGJ,KAAK,CAACK,WAAW,CAAC,CAAC;EAEhC,MAAMC,YAAY,GAAG,CACnB,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EACrD,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CACrE;EAED,OAAQ,aAAYF,IAAK,IAAGE,YAAY,CAACJ,GAAG,CAAE,OAAM;AACtD,CAAC;;AAED;AACA,MAAMK,sBAAsB,GAAGA,CAACC,IAAI,EAAER,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,KAAK;EAC3D,MAAMQ,GAAG,GAAGT,KAAK,CAACU,OAAO,CAAC,CAAC;EAC3B,MAAMC,KAAK,GAAI,OAAMF,GAAI,EAAC;EAE1B,OAAOD,IAAI,CAACG,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5B,CAAC;;AAED;AACA,MAAMC,qBAAqB,GAAG,MAAAA,CAAOZ,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,KAAK;EAC1D,MAAMY,aAAa,GAAGd,oBAAoB,CAACC,KAAK,CAAC;EAEjD,IAAI;IACF,MAAMQ,IAAI,GAAG,MAAM,MAAM,CAAE,UAASK,aAAc,EAAC,CAAC;IACpD,OAAON,sBAAsB,CAACC,IAAI,CAACM,OAAO,EAAEd,KAAK,CAAC;EACpD,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE;EACX;AACF,CAAC;AAED,SAASH,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
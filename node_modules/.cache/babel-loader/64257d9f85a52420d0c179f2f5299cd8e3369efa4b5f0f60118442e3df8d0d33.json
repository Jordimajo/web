{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Producto from './components/Producto';\nimport PrecioSlider from './components/PrecioSlider';\nimport Header from './components/layout/Header';\nimport { comprobarYActualizarPuntos } from './utils/comprobar';\nimport { haJugadoElDia, actualizarPuntosDelProducto } from './utils/storage';\nimport { cargarProductosDelDia } from './utils/carga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [productoActual, setProductoActual] = useState(null);\n  const [precioEstimado, setPrecioEstimado] = useState(0);\n  const fechaHoy = new Date().toISOString().slice(0, 10); // Formato: \"YYYY-MM-DD\"\n\n  const cargarProductoPorIndice = indice => {\n    cargarProductosDelDia().then(productos => {\n      if (indice !== -1 && productos.length > indice) {\n        setProductoActual(productos[indice]);\n      } else if (indice === -1) {\n        console.log(\"El jugador ya ha jugado todos los productos del día. Mostrar resumen.\");\n        // Aquí puedes actualizar el estado o realizar alguna acción adicional para mostrar el resumen al usuario\n      }\n    });\n  };\n\n  useEffect(() => {\n    const indiceProducto = haJugadoElDia(fechaHoy);\n    cargarProductoPorIndice(indiceProducto);\n  }, [fechaHoy]);\n  const comprobarPrecio = () => {\n    comprobarYActualizarPuntos(fechaHoy, precioEstimado, productoActual.precio);\n    console.log('Precio estimado:', precioEstimado);\n    const nuevoIndice = haJugadoElDia(fechaHoy);\n    cargarProductoPorIndice(nuevoIndice);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), productoActual && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Producto, {\n        producto: productoActual\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrecioSlider, {\n        precioEstimado: precioEstimado,\n        setPrecioEstimado: setPrecioEstimado,\n        precioReal: productoActual.precio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: comprobarPrecio,\n        children: \"Comprobar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RwFnOPTHMFFmsesvf0A7dHv7oeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Producto","PrecioSlider","Header","comprobarYActualizarPuntos","haJugadoElDia","actualizarPuntosDelProducto","cargarProductosDelDia","jsxDEV","_jsxDEV","App","_s","productoActual","setProductoActual","precioEstimado","setPrecioEstimado","fechaHoy","Date","toISOString","slice","cargarProductoPorIndice","indice","then","productos","length","console","log","indiceProducto","comprobarPrecio","precio","nuevoIndice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","producto","precioReal","onClick","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Producto from './components/Producto';\nimport PrecioSlider from './components/PrecioSlider';\nimport Header from './components/layout/Header';\nimport { comprobarYActualizarPuntos } from './utils/comprobar';\nimport { haJugadoElDia, actualizarPuntosDelProducto } from './utils/storage';\nimport { cargarProductosDelDia } from './utils/carga';\n\nconst App = () => {\n  const [productoActual, setProductoActual] = useState(null);\n  const [precioEstimado, setPrecioEstimado] = useState(0);\n  const fechaHoy = new Date().toISOString().slice(0, 10); // Formato: \"YYYY-MM-DD\"\n\n  const cargarProductoPorIndice = (indice) => {\n    cargarProductosDelDia().then(productos => {\n      if (indice !== -1 && productos.length > indice) {\n        setProductoActual(productos[indice]);\n      } else if (indice === -1) {\n        console.log(\"El jugador ya ha jugado todos los productos del día. Mostrar resumen.\");\n        // Aquí puedes actualizar el estado o realizar alguna acción adicional para mostrar el resumen al usuario\n      }\n    });\n  };\n\n  useEffect(() => {\n    const indiceProducto = haJugadoElDia(fechaHoy);\n    cargarProductoPorIndice(indiceProducto);\n  }, [fechaHoy]);\n\n  const comprobarPrecio = () => {\n    comprobarYActualizarPuntos(fechaHoy, precioEstimado, productoActual.precio);\n    console.log('Precio estimado:', precioEstimado);\n    const nuevoIndice = haJugadoElDia(fechaHoy);\n    cargarProductoPorIndice(nuevoIndice);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {/* Mostrar el producto y el slider si el producto está disponible */}\n      {productoActual && (\n        <div>\n          <Producto producto={productoActual} />\n          <PrecioSlider\n            precioEstimado={precioEstimado}\n            setPrecioEstimado={setPrecioEstimado}\n            precioReal={productoActual.precio}\n          />\n          {/* Aquí también puedes añadir un botón para \"comprobar\" y otros elementos de UI que necesites */}\n          <button onClick={comprobarPrecio}>Comprobar</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,0BAA0B,QAAQ,mBAAmB;AAC9D,SAASC,aAAa,EAAEC,2BAA2B,QAAQ,iBAAiB;AAC5E,SAASC,qBAAqB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMiB,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAExD,MAAMC,uBAAuB,GAAIC,MAAM,IAAK;IAC1Cd,qBAAqB,CAAC,CAAC,CAACe,IAAI,CAACC,SAAS,IAAI;MACxC,IAAIF,MAAM,KAAK,CAAC,CAAC,IAAIE,SAAS,CAACC,MAAM,GAAGH,MAAM,EAAE;QAC9CR,iBAAiB,CAACU,SAAS,CAACF,MAAM,CAAC,CAAC;MACtC,CAAC,MAAM,IAAIA,MAAM,KAAK,CAAC,CAAC,EAAE;QACxBI,OAAO,CAACC,GAAG,CAAC,uEAAuE,CAAC;QACpF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;;EAED1B,SAAS,CAAC,MAAM;IACd,MAAM2B,cAAc,GAAGtB,aAAa,CAACW,QAAQ,CAAC;IAC9CI,uBAAuB,CAACO,cAAc,CAAC;EACzC,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BxB,0BAA0B,CAACY,QAAQ,EAAEF,cAAc,EAAEF,cAAc,CAACiB,MAAM,CAAC;IAC3EJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,cAAc,CAAC;IAC/C,MAAMgB,WAAW,GAAGzB,aAAa,CAACW,QAAQ,CAAC;IAC3CI,uBAAuB,CAACU,WAAW,CAAC;EACtC,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACN,MAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAETxB,cAAc,iBACbH,OAAA;MAAAuB,QAAA,gBACEvB,OAAA,CAACR,QAAQ;QAACoC,QAAQ,EAAEzB;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtC3B,OAAA,CAACP,YAAY;QACXY,cAAc,EAAEA,cAAe;QAC/BC,iBAAiB,EAAEA,iBAAkB;QACrCuB,UAAU,EAAE1B,cAAc,CAACiB;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAEF3B,OAAA;QAAQ8B,OAAO,EAAEX,eAAgB;QAAAI,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA9CKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
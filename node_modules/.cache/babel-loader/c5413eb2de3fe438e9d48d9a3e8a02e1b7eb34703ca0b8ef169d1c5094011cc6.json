{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { isToday, format, addDays, isBefore } from 'date-fns';\nimport { resumenDiasJugados } from '../utils/storage';\nimport './CalendarioPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendario() {\n  _s();\n  const [days, setDays] = useState([]);\n  const diasJugados = resumenDiasJugados();\n  useEffect(() => {\n    const startDay = new Date(2023, 8, 13);\n    const today = new Date();\n    const calendarDays = [];\n    for (let day = startDay; isBefore(day, today) || isToday(day); day = addDays(day, 1)) {\n      calendarDays.push(day);\n    }\n    setDays(calendarDays);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"calendar-header\",\n      children: \"Septiembre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-days\",\n      children: days.map((day, index) => {\n        const formattedDate = format(day, 'yyyy-MM-dd');\n        const jugado = diasJugados[formattedDate];\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `day-button ${jugado ? 'played' : ''}`,\n          style: {\n            backgroundColor: jugado ? 'red' : 'green'\n          },\n          children: format(day, 'dd')\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendario, \"mPcOYHTyVZ2XQV1Az4OdG7zolXo=\");\n_c = Calendario;\nexport default Calendario;\nvar _c;\n$RefreshReg$(_c, \"Calendario\");","map":{"version":3,"names":["React","useState","useEffect","isToday","format","addDays","isBefore","resumenDiasJugados","jsxDEV","_jsxDEV","Calendario","_s","days","setDays","diasJugados","startDay","Date","today","calendarDays","day","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","formattedDate","jugado","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isToday, format, addDays, isBefore } from 'date-fns';\nimport { resumenDiasJugados } from '../utils/storage';\nimport './CalendarioPage.css';\n\nfunction Calendario() {\n    const [days, setDays] = useState([]);\n    const diasJugados = resumenDiasJugados();\n\n    useEffect(() => {\n        const startDay = new Date(2023, 8, 13);\n        const today = new Date();\n\n        const calendarDays = [];\n\n        for (let day = startDay; isBefore(day, today) || isToday(day); day = addDays(day, 1)) {\n            calendarDays.push(day);\n        }\n\n        setDays(calendarDays);\n    }, []);\n\n    return (\n        <div className=\"calendar\">\n            <h2 className=\"calendar-header\">Septiembre</h2>\n            <div className=\"calendar-days\">\n                {days.map((day, index) => {\n                    const formattedDate = format(day, 'yyyy-MM-dd');\n                    const jugado = diasJugados[formattedDate];\n                    return (\n                        <button \n                            key={index} \n                            className={`day-button ${jugado ? 'played' : ''}`}\n                            style={{ backgroundColor: jugado ? 'red' : 'green' }}>\n                            {format(day, 'dd')}\n                        </button>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default Calendario;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,UAAU;AAC7D,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMa,WAAW,GAAGP,kBAAkB,CAAC,CAAC;EAExCL,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;IACtC,MAAMC,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IAExB,MAAME,YAAY,GAAG,EAAE;IAEvB,KAAK,IAAIC,GAAG,GAAGJ,QAAQ,EAAET,QAAQ,CAACa,GAAG,EAAEF,KAAK,CAAC,IAAId,OAAO,CAACgB,GAAG,CAAC,EAAEA,GAAG,GAAGd,OAAO,CAACc,GAAG,EAAE,CAAC,CAAC,EAAE;MAClFD,YAAY,CAACE,IAAI,CAACD,GAAG,CAAC;IAC1B;IAEAN,OAAO,CAACK,YAAY,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBb,OAAA;MAAIY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CjB,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBV,IAAI,CAACe,GAAG,CAAC,CAACR,GAAG,EAAES,KAAK,KAAK;QACtB,MAAMC,aAAa,GAAGzB,MAAM,CAACe,GAAG,EAAE,YAAY,CAAC;QAC/C,MAAMW,MAAM,GAAGhB,WAAW,CAACe,aAAa,CAAC;QACzC,oBACIpB,OAAA;UAEIY,SAAS,EAAG,cAAaS,MAAM,GAAG,QAAQ,GAAG,EAAG,EAAE;UAClDC,KAAK,EAAE;YAAEC,eAAe,EAAEF,MAAM,GAAG,KAAK,GAAG;UAAQ,CAAE;UAAAR,QAAA,EACpDlB,MAAM,CAACe,GAAG,EAAE,IAAI;QAAC,GAHbS,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIN,CAAC;MAEjB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACf,EAAA,CApCQD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
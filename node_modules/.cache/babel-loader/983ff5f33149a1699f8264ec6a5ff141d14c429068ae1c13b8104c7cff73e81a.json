{"ast":null,"code":"var _jsxFileName = \"/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.js\";\nimport React from 'react';\nimport { format, addMonths, isBefore, isToday } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarioPage = () => {\n  const today = new Date();\n  const startDate = new Date(2023, 8, 13); // 13 de septiembre de 2023\n\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view !== \"month\") {\n      return null; // We only want to customize the day view\n    }\n\n    let color = \"gray\";\n    let link = null;\n    const isPlayed = false; // Aquí puedes determinar si el día ha sido jugado o no\n    const isInProgress = isToday(date);\n    if (isBefore(date, startDate)) {\n      color = \"gray\";\n    } else if (isPlayed) {\n      color = \"red\";\n      link = `/resumen/${format(date, 'yyyy-MM-dd')}`;\n    } else if (isInProgress) {\n      color = \"yellow\";\n    } else {\n      color = \"green\";\n      link = `/jugar/${format(date, 'yyyy-MM-dd')}`;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: color\n      },\n      children: link ? /*#__PURE__*/_jsxDEV(Link, {\n        to: link,\n        children: format(date, 'dd')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this) : format(date, 'dd')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      tileContent: tileContent,\n      maxDate: today,\n      minDate: startDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_c = CalendarioPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarioPage\");","map":{"version":3,"names":["React","format","addMonths","isBefore","isToday","Link","Calendar","jsxDEV","_jsxDEV","CalendarioPage","today","Date","startDate","tileContent","date","view","color","link","isPlayed","isInProgress","style","backgroundColor","children","to","fileName","_jsxFileName","lineNumber","columnNumber","maxDate","minDate","_c","$RefreshReg$"],"sources":["/Users/jordi/web/web/aplicacion/src/pages/CalendarioPage.js"],"sourcesContent":["import React from 'react';\nimport { format, addMonths, isBefore, isToday } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarioPage = () => {\n    const today = new Date();\n    const startDate = new Date(2023, 8, 13); // 13 de septiembre de 2023\n  \n    const tileContent = ({ date, view }) => {\n      if (view !== \"month\") {\n        return null;  // We only want to customize the day view\n      }\n  \n      let color = \"gray\";\n      let link = null;\n      const isPlayed = false;  // Aquí puedes determinar si el día ha sido jugado o no\n      const isInProgress = isToday(date);\n  \n      if (isBefore(date, startDate)) {\n        color = \"gray\";\n      } else if (isPlayed) {\n        color = \"red\";\n        link = `/resumen/${format(date, 'yyyy-MM-dd')}`;\n      } else if (isInProgress) {\n        color = \"yellow\";\n      } else {\n        color = \"green\";\n        link = `/jugar/${format(date, 'yyyy-MM-dd')}`;\n      }\n  \n      return (\n        <div style={{ backgroundColor: color }}>\n          {link ? <Link to={link}>{format(date, 'dd')}</Link> : format(date, 'dd')}\n        </div>\n      );\n    };\n  \n    return (\n      <div>\n        <Calendar \n          tileContent={tileContent}\n          maxDate={today}\n          minDate={startDate}\n        />\n      </div>\n    );\n  };\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,UAAU;AAC/D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAG,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEzC,MAAME,WAAW,GAAGA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IACtC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,IAAI,CAAC,CAAE;IAChB;;IAEA,IAAIC,KAAK,GAAG,MAAM;IAClB,IAAIC,IAAI,GAAG,IAAI;IACf,MAAMC,QAAQ,GAAG,KAAK,CAAC,CAAE;IACzB,MAAMC,YAAY,GAAGf,OAAO,CAACU,IAAI,CAAC;IAElC,IAAIX,QAAQ,CAACW,IAAI,EAAEF,SAAS,CAAC,EAAE;MAC7BI,KAAK,GAAG,MAAM;IAChB,CAAC,MAAM,IAAIE,QAAQ,EAAE;MACnBF,KAAK,GAAG,KAAK;MACbC,IAAI,GAAI,YAAWhB,MAAM,CAACa,IAAI,EAAE,YAAY,CAAE,EAAC;IACjD,CAAC,MAAM,IAAIK,YAAY,EAAE;MACvBH,KAAK,GAAG,QAAQ;IAClB,CAAC,MAAM;MACLA,KAAK,GAAG,OAAO;MACfC,IAAI,GAAI,UAAShB,MAAM,CAACa,IAAI,EAAE,YAAY,CAAE,EAAC;IAC/C;IAEA,oBACEN,OAAA;MAAKY,KAAK,EAAE;QAAEC,eAAe,EAAEL;MAAM,CAAE;MAAAM,QAAA,EACpCL,IAAI,gBAAGT,OAAA,CAACH,IAAI;QAACkB,EAAE,EAAEN,IAAK;QAAAK,QAAA,EAAErB,MAAM,CAACa,IAAI,EAAE,IAAI;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,GAAG1B,MAAM,CAACa,IAAI,EAAE,IAAI;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAEV,CAAC;EAED,oBACEnB,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACF,QAAQ;MACPO,WAAW,EAAEA,WAAY;MACzBe,OAAO,EAAElB,KAAM;MACfmB,OAAO,EAAEjB;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GA1CErB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
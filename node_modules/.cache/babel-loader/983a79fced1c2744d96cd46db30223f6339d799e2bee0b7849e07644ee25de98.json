{"ast":null,"code":"export const actualizarPuntosDelProducto = (fecha, indiceProducto, puntos) => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n\n  // Si la fecha no existe en almacenados, inicializarla\n  if (!almacenados[fecha]) {\n    almacenados[fecha] = [0, 0, 0, 0, 0];\n  }\n\n  // Actualizar los puntos del producto en la fecha dada\n  almacenados[fecha][indiceProducto] = puntos;\n  localStorage.setItem(\"datosJuego\", JSON.stringify(almacenados));\n};\nexport const obtenerDatosDelDia = fecha => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n  return almacenados[fecha] || null;\n};\nexport const obtenerTodosLosDatos = () => {\n  return JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n};\nexport const haJugadoElDia = fecha => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n  const datosDelDia = almacenados[fecha] || [0, 0, 0, 0, 0];\n\n  // Encuentra el índice del primer producto que aún no ha sido jugado (tiene puntos 0).\n  const indiceSiguienteProducto = datosDelDia.indexOf(0);\n\n  // Si todos los productos han sido jugados, devuelve -1. Si no, devuelve el índice del siguiente producto.\n  return indiceSiguienteProducto === -1 ? -1 : indiceSiguienteProducto;\n};\nexport const obtenerPuntosDelDia = fecha => {\n  const datosDelDia = obtenerDatosDelDia(fecha);\n  if (!datosDelDia) {\n    return 0;\n  }\n  return datosDelDia.reduce((total, puntos) => total + puntos, 0);\n};\nexport const resumenDiasJugados = () => {\n  const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n  const resumen = {};\n  for (const fecha in almacenados) {\n    const juegosDelDia = almacenados[fecha];\n    if (juegosDelDia.every(puntos => puntos === 0)) {\n      resumen[fecha] = 'no jugado';\n    } else if (juegosDelDia.some(puntos => puntos === 0)) {\n      resumen[fecha] = 'comenzado';\n    } else {\n      resumen[fecha] = 'completado';\n    }\n  }\n  return resumen;\n};\nexport const diasJugadosCompletamente = () => {\n  const resumen = resumenDiasJugados();\n  return Object.values(resumen).filter(estado => estado === 'completado').length;\n};\nexport const diasObjetivoSuperado50 = () => {\n  const datos = obtenerTodosLosDatos();\n  let count = 0;\n  for (const fecha in datos) {\n    if (obtenerPuntosDelDia(fecha) >= 50) {\n      count++;\n    }\n  }\n  return count;\n};\nexport const diasObjetivoSuperado80 = () => {\n  const datos = obtenerTodosLosDatos();\n  let count = 0;\n  for (const fecha in datos) {\n    if (obtenerPuntosDelDia(fecha) >= 80) {\n      count++;\n    }\n  }\n  return count;\n};\nexport const puntuacionMedia = () => {\n  const datos = obtenerTodosLosDatos();\n  let totalPuntos = 0;\n  let diasContabilizados = 0;\n  for (const fecha in datos) {\n    const puntosDelDia = obtenerPuntosDelDia(fecha);\n    const esDiaCompletado = !datos[fecha].includes(0); // No hay ningún producto con 0 puntos\n\n    if (esDiaCompletado && puntosDelDia > 0) {\n      totalPuntos += puntosDelDia;\n      diasContabilizados++;\n    }\n  }\n  return diasContabilizados ? (totalPuntos / diasContabilizados).toFixed(2) : 0; // Redondeo a 2 decimales\n};","map":{"version":3,"names":["actualizarPuntosDelProducto","fecha","indiceProducto","puntos","almacenados","JSON","parse","localStorage","getItem","setItem","stringify","obtenerDatosDelDia","obtenerTodosLosDatos","haJugadoElDia","datosDelDia","indiceSiguienteProducto","indexOf","obtenerPuntosDelDia","reduce","total","resumenDiasJugados","resumen","juegosDelDia","every","some","diasJugadosCompletamente","Object","values","filter","estado","length","diasObjetivoSuperado50","datos","count","diasObjetivoSuperado80","puntuacionMedia","totalPuntos","diasContabilizados","puntosDelDia","esDiaCompletado","includes","toFixed"],"sources":["/Users/jordi/web/web/aplicacion/src/utils/storage.js"],"sourcesContent":["export const actualizarPuntosDelProducto = (fecha, indiceProducto, puntos) => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n\n    // Si la fecha no existe en almacenados, inicializarla\n    if (!almacenados[fecha]) {\n        almacenados[fecha] = [0, 0, 0, 0, 0];\n    }\n\n    // Actualizar los puntos del producto en la fecha dada\n    almacenados[fecha][indiceProducto] = puntos;\n\n    localStorage.setItem(\"datosJuego\", JSON.stringify(almacenados));\n};\n\nexport const obtenerDatosDelDia = (fecha) => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n    return almacenados[fecha] || null;\n};\n\nexport const obtenerTodosLosDatos = () => {\n    return JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n};\n\nexport const haJugadoElDia = (fecha) => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n    const datosDelDia = almacenados[fecha] || [0, 0, 0, 0, 0];\n\n    // Encuentra el índice del primer producto que aún no ha sido jugado (tiene puntos 0).\n    const indiceSiguienteProducto = datosDelDia.indexOf(0);\n\n    // Si todos los productos han sido jugados, devuelve -1. Si no, devuelve el índice del siguiente producto.\n    return indiceSiguienteProducto === -1 ? -1 : indiceSiguienteProducto;\n};\n\nexport const obtenerPuntosDelDia = (fecha) => {\n    const datosDelDia = obtenerDatosDelDia(fecha);\n    if (!datosDelDia) {\n        return 0;\n    }\n    return datosDelDia.reduce((total, puntos) => total + puntos, 0);\n};\n\n\nexport const resumenDiasJugados = () => {\n    const almacenados = JSON.parse(localStorage.getItem(\"datosJuego\") || \"{}\");\n    const resumen = {};\n\n    for (const fecha in almacenados) {\n        const juegosDelDia = almacenados[fecha];\n\n        if (juegosDelDia.every(puntos => puntos === 0)) {\n            resumen[fecha] = 'no jugado';\n        } else if (juegosDelDia.some(puntos => puntos === 0)) {\n            resumen[fecha] = 'comenzado';\n        } else {\n            resumen[fecha] = 'completado';\n        }\n    }\n\n    return resumen;\n};\n\nexport const diasJugadosCompletamente = () => {\n    const resumen = resumenDiasJugados();\n    return Object.values(resumen).filter(estado => estado === 'completado').length;\n};\n\nexport const diasObjetivoSuperado50 = () => {\n    const datos = obtenerTodosLosDatos();\n    let count = 0;\n\n    for (const fecha in datos) {\n        if (obtenerPuntosDelDia(fecha) >= 50) {\n            count++;\n        }\n    }\n\n    return count;\n};\n\nexport const diasObjetivoSuperado80 = () => {\n    const datos = obtenerTodosLosDatos();\n    let count = 0;\n\n    for (const fecha in datos) {\n        if (obtenerPuntosDelDia(fecha) >= 80) {\n            count++;\n        }\n    }\n\n    return count;\n};\n\nexport const puntuacionMedia = () => {\n    const datos = obtenerTodosLosDatos();\n    let totalPuntos = 0;\n    let diasContabilizados = 0;\n\n    for (const fecha in datos) {\n        const puntosDelDia = obtenerPuntosDelDia(fecha);\n        const esDiaCompletado = !datos[fecha].includes(0); // No hay ningún producto con 0 puntos\n\n        if (esDiaCompletado && puntosDelDia > 0) {\n            totalPuntos += puntosDelDia;\n            diasContabilizados++;\n        }\n    }\n\n    return diasContabilizados ? (totalPuntos / diasContabilizados).toFixed(2) : 0;  // Redondeo a 2 decimales\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}